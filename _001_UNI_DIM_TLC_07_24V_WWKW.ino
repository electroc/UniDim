
#include "Tlc5940.h"
#include "tlc_config.h"
#include <Wire.h>
#include <Flash.h>

const byte  number_of_channels = 16;

unsigned int channelvalues[number_of_channels];

/* PIXL SETTINGS
FLASH_ARRAY(unsigned int, pwmTable_R,0,6,6,6,6,7,7,8,8,9,9,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,15,15,15,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,30,30,31,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,59,61,63,65,67,70,72,74,76,78,80,83,86,89,92,95,99,102,105,110,115,120,125,128,131,134,137,140,144,147,151,154,158,162,166,170,174,178,182,186,191,195,200,205,210,215,220,225,230,236,242,247,253,259,265,272,278,285,292,299,306,313,321,328,336,344,352,361,369,378,387,396,406,416,425,436,446,457,468,479,490,502,514,526,539,551,565,578,592,606,620,635,650,666,682,698,715,732,749,767,786,804,823,843,863,884,905,927,949,971,995,1018,1043,1067,1093,1119,1146,1173,1201,1230,1259,1289,1320,1351,1384,1417,1450,1485,1521,1557,1594,1632,1671,1711,1752,1794,1836,1880,1925,1971,2018,2066,2116,2166,2218,2271,2325,2380,2437,2495,2555,2616,2678,2742,2808,2875,2943,3014,3085,3159,3235,3312,3391,3472,3555,3639);
FLASH_ARRAY(unsigned int, pwmTable_G,0,6,6,7,7,8,8,9,9,10,10,10,11,11,11,12,12,12,12,13,13,13,14,14,14,15,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,27,27,28,29,29,30,31,31,32,33,34,35,36,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,57,58,59,61,62,64,66,67,69,71,72,74,76,78,80,82,84,86,88,90,92,95,97,99,102,104,107,110,112,115,118,121,124,127,130,133,137,140,143,147,151,154,158,162,166,170,174,179,183,188,192,197,202,207,212,217,223,228,234,240,246,252,258,264,271,278,285,292,299,306,314,322,330,338,346,355,363,372,382,391,401,411,421,431,442,453,464,476,487,500,512,525,538,551,565,579,593,608,623,638,654,670,687,704,721,739,757,776,795,815,835,856,877,899,921,944,967,991,1015,1041,1066,1093,1120,1148,1176,1205,1235,1266,1297,1329,1362,1396,1430,1466,1502,1539,1577,1616,1656,1697,1739,1783,1827,1872,1918,1966,2014,2064,2115,2168,2222,2277,2333,2391,2450,2511,2573,2636,2702,2769,2837,2907,2979,3053,3129,3206,3286,3367,3451,3536,3624,3713,3805,3899,3996,4095);
FLASH_ARRAY(unsigned int, pwmTable_B,0,6,6,7,7,8,8,9,9,10,10,10,11,11,11,12,12,12,12,13,13,13,14,14,14,15,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,27,27,28,29,29,30,31,31,32,33,34,35,36,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,57,58,59,61,62,64,66,67,69,71,72,74,76,78,80,82,84,86,88,90,92,95,97,99,102,104,107,110,112,115,118,121,124,127,130,133,137,140,143,147,151,154,158,162,166,170,174,179,183,188,192,197,202,207,212,217,223,228,234,240,246,252,258,264,271,278,285,292,299,306,314,322,330,338,346,355,363,372,382,391,401,411,421,431,442,453,464,476,487,500,512,525,538,551,565,579,593,608,623,638,654,670,687,704,721,739,757,776,795,815,835,856,877,899,921,944,967,991,1015,1041,1066,1093,1120,1148,1176,1205,1235,1266,1297,1329,1362,1396,1430,1466,1502,1539,1577,1616,1656,1697,1739,1783,1827,1872,1918,1966,2014,2064,2115,2168,2222,2277,2333,2391,2450,2511,2573,2636,2702,2769,2837,2907,2979,3053,3129,3206,3286,3367,3451,3536,3624,3713,3805,3899,3996,4095);
*/
FLASH_ARRAY(unsigned int, pwmTable_W,0,6,6,7,7,8,8,9,9,10,10,10,11,11,11,12,12,12,12,13,13,13,14,14,14,15,15,15,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,27,27,28,29,29,30,31,31,32,33,34,35,36,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,55,57,58,59,61,62,64,66,67,69,71,72,74,76,78,80,82,84,86,88,90,92,95,97,99,102,104,107,110,112,115,118,121,124,127,130,133,137,140,143,147,151,154,158,162,166,170,174,179,183,188,192,197,202,207,212,217,223,228,234,240,246,252,258,264,271,278,285,292,299,306,314,322,330,338,346,355,363,372,382,391,401,411,421,431,442,453,464,476,487,500,512,525,538,551,565,579,593,608,623,638,654,670,687,704,721,739,757,776,795,815,835,856,877,899,921,944,967,991,1015,1041,1066,1093,1120,1148,1176,1205,1235,1266,1297,1329,1362,1396,1430,1466,1502,1539,1577,1616,1656,1697,1739,1783,1827,1872,1918,1966,2014,2064,2115,2168,2222,2277,2333,2391,2450,2511,2573,2636,2702,2769,2837,2907,2979,3053,3129,3206,3286,3367,3451,3536,3624,3713,3805,3899,3996,4095);

/*
FLASH_ARRAY(unsigned int, pwmTable_R,0,17,18,18,19,19,19,20,20,21,21,22,22,22,23,23,24,25,25,26,26,27,27,28,28,29,30,30,31,32,32,33,34,35,35,36,37,38,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,62,63,64,66,67,69,70,72,73,75,77,78,80,82,83,85,87,89,91,93,95,97,99,101,104,106,108,110,113,115,118,120,123,126,128,131,134,137,140,143,146,149,152,156,159,163,166,170,173,177,181,185,189,193,197,202,206,211,215,220,225,229,234,240,245,250,255,261,267,272,278,284,291,297,303,310,317,324,331,338,345,353,360,368,376,384,393,401,410,419,428,437,447,457,467,477,487,498,508,519,531,542,554,566,578,591,604,617,630,644,658,672,687,702,717,733,749,765,782,799,816,834,852,870,889,909,928,949,969,990,1012,1034,1056,1079,1103,1127,1151,1176,1202,1228,1255,1282,1310,1338,1367,1397,1427,1459,1490,1523,1556,1590,1624,1659,1695,1732,1770,1808,1848,1888,1929,1971,2014,2058,2102,2148,2195,2242,2291,2341,2392,2444,2497,2551,2607,2663,2721,2781,2841,2903,2966,3030,3096,3164,3232,3303,3374,3448,3523,3599,3677,3757,3839,3923,4008,4095
);

FLASH_ARRAY(unsigned int, pwmTable_G,0,18,19,19,20,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,28,28,29,29,30,31,31,32,33,33,34,35,36,36,37,38,39,40,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,61,62,63,65,66,67,69,70,72,73,75,77,78,80,82,83,85,87,89,91,93,95,97,99,101,103,105,108,110,112,115,117,120,122,125,128,130,133,136,139,142,145,148,151,154,158,161,165,168,172,176,179,183,187,191,195,199,204,208,213,217,222,227,231,236,242,247,252,257,263,269,274,280,286,292,299,305,312,318,325,332,339,347,354,362,370,378,386,394,402,411,420,429,438,448,457,467,477,487,498,509,520,531,542,554,566,578,590,603,616,629,643,657,671,685,700,715,730,746,762,779,795,812,830,848,866,885,904,923,943,963,984,1005,1027,1049,1071,1094,1118,1142,1167,1192,1217,1243,1270,1298,1325,1354,1383,1413,1443,1474,1506,1538,1572,1605,1640,1675,1711,1748,1786,1824,1863,1903,1944,1986,2029,2072,2117,2163,2209,2257,2305,2355,2405,2457,2510,2564,2619,2675,2733,2792,2852,2913,2976,3040,3105,3172,3240,3310,3381,3454,3528,3604,3682,3761,3842,3924,4009,4095
);

FLASH_ARRAY(unsigned int, pwmTable_B,0,18,19,19,20,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,28,28,29,29,30,31,31,32,33,33,34,35,36,36,37,38,39,40,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,58,59,61,62,63,65,66,67,69,70,72,73,75,77,78,80,82,83,85,87,89,91,93,95,97,99,101,103,105,108,110,112,115,117,120,122,125,128,130,133,136,139,142,145,148,151,154,158,161,165,168,172,176,179,183,187,191,195,199,204,208,213,217,222,227,231,236,242,247,252,257,263,269,274,280,286,292,299,305,312,318,325,332,339,347,354,362,370,378,386,394,402,411,420,429,438,448,457,467,477,487,498,509,520,531,542,554,566,578,590,603,616,629,643,657,671,685,700,715,730,746,762,779,795,812,830,848,866,885,904,923,943,963,984,1005,1027,1049,1071,1094,1118,1142,1167,1192,1217,1243,1270,1298,1325,1354,1383,1413,1443,1474,1506,1538,1572,1605,1640,1675,1711,1748,1786,1824,1863,1903,1944,1986,2029,2072,2117,2163,2209,2257,2305,2355,2405,2457,2510,2564,2619,2675,2733,2792,2852,2913,2976,3040,3105,3172,3240,3310,3381,3454,3528,3604,3682,3761,3842,3924,4009,4095
);
*/




/*
unsigned int pwmTableCall(byte dmx_channel, unsigned int pwm_value) 
  {
    unsigned int pwm_final_value;
         
    return pwm_final_value;
  }
*/

boolean checkreading=false;

//boolean ledflag=false;

#define led1 5
#define led2 6

#define jumper1 2
#define jumper2 1
#define jumper3 0

byte jumper1state;
byte jumper2state;
byte jumper3state;

//unsigned int z=0;

//boolean ledState=false;

//byte counter = 0;

void setup() {

  //Tlc5940::TLC_PWM_PERIOD = 8192;
  //Tlc5940::TLC_GSCLK_PERIOD = 3;
  

  pinMode(jumper1,INPUT_PULLUP);
  pinMode(jumper2,INPUT_PULLUP);
  pinMode(jumper3,INPUT_PULLUP);
  
  pinMode(led1,OUTPUT);
  pinMode(led2,OUTPUT);
  
  delay(500);
  jumper1state=digitalRead(jumper1);
  jumper2state=digitalRead(jumper2);
  jumper3state=digitalRead(jumper3);
  delay(500);
  
  Tlc.init();
  
  Wire.begin(4);                // Start I2C Bus as a Slave (Device Number 9)
  // change the clock rate (behind Wires' back)
  //  TWBR = ((CPU_FREQ / 400000L) - 16) / 2;
  Wire.setClock(400000); 
  Wire.onReceive(receiveEvent); // register event
  
  Tlc.clear();


  digitalWrite(led1,HIGH);
  delay(1000);
  digitalWrite(led1,LOW);
  digitalWrite(led2,HIGH);
  delay(1000);
  digitalWrite(led2,LOW);
  
  
   
}

void loop() {
//  digitalWrite(led,checkreading);
  if(checkreading)
    {
    digitalWrite(led1,HIGH);  

    for(byte x=0;x<number_of_channels;x++)  
      {
        channelvalues[x] = pwmTable_W[channelvalues[x]];
        /*
        if ( x == 0 || x == 3 || x == 6 || x == 9 || x == 12 ||
             x == 15 || x == 18 || x == 21 || x == 24 || x == 27 ||             
             x == 30 || x == 33 || x == 36 || x == 39 || x == 42 ||
             x == 45  || x == 48 || x == 51 || x == 54 ||x == 57 || x == 60 )
            {
              channelvalues[x] = pwmTable_R[channelvalues[x]];
            } 
         else if ( x == 1 || x == 4 || x == 7 || x == 10 || x == 13 ||
             x == 16 || x == 19 || x == 22 || x == 25 || x == 28 ||             
             x == 31 || x == 34 || x == 37 || x == 40 || x == 43 ||
             x == 46  || x == 49 || x == 52 || x == 55 ||x == 58 || x == 61)
            
            {
              channelvalues[x] = pwmTable_G[channelvalues[x]];
            }
         else {
              channelvalues[x] = pwmTable_B[channelvalues[x]];
        }
       */    
     } 

   byte y=0;
      
   for(byte x=0;x<number_of_channels;x++)   
      {
        //if( x==15 || x==30 || x==45 || x==60) y++;
        
        Tlc.set(y,channelvalues[x]);
        
        y++;
      }
    
    Tlc.update();  
    checkreading=false;  
    digitalWrite(led1,LOW);
    }
}

 void receiveEvent(int howMany)
{
//   digitalWrite(led,HIGH);
   int index=0;
   checkreading=true;
   while(Wire.available())  channelvalues[index++]=Wire.read();
//   digitalWrite(led,LOW);
}

